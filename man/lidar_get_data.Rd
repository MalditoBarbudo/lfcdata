% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lfcLiDAR.R
\name{lidar_get_data}
\alias{lidar_get_data}
\title{Access to the tables in the LiDAR database}
\usage{
lidar_get_data(object, table_name, spatial = "stars")
}
\arguments{
\item{object}{\code{lfcLiDAR} object, as created by \code{\link{lidar}}}

\item{table_name}{character vector of lenght 1 indicating the requested raster name}

\item{spatial}{character vector of lenght 1 indicating the type of raster object to
return, "raster" or "stars", the default.}
}
\value{
A raster object: \code{RasterLayer} if spatial is \code{raster},
  \code{stars} if spatial is \code{stars}. See https://r-spatial.github.io/stars/index.html
  for details about stars objects and \code{\link[raster]{raster}} for details
  about raster objects.
}
\description{
\code{lidar_get_data} is a wrapper for the \code{$get_data} method of
  \code{lfcLiDAR} objects. See also \code{\link{lidar}}.
}
\details{
Connection to database can be slow. Rasters retrieved from the db are stored
  in a temporary cache inside the lfcLiDAR object created by \code{\link{lidar}}, making
  subsequent calls to the same table are faster. But, be warned that in-memory rasters
  can use a lot of memory!
}
\examples{
lidardb <- lidar()
# raster
ab_raster <- lidar_get_data(lidardb, 'AB', 'raster')
# stars
ab_stars <- lidar_get_data(lidardb, 'AB', 'stars')

# we can use pipes
lidardb \%>\%
  lidar_get_data('AB', 'raster')

# lidardb is an R6 object, so the previous examples are the same as:
lidardb$get_data('AB', 'raster')
lidardb$get_data('AB', 'stars')

}
\seealso{
Other LiDAR functions: \code{\link{lidar}}
}
\concept{LiDAR functions}
